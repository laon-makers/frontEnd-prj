<!DOCTYPE html>
<!--
    Copyright (C) 2024 Gi Tae Cho laon.makers@yahoo.com
    This file is a part of the Smart Home WiFi Web Server project.
    This project can not be copied and/or distributed without the express permission of Gi Tae Cho laon.makers@yahoo.com.

    Author: G.T. Cho (a Laon maker/artist in Laon Creators' Group)
    Version: 1.0
    Last update: Dec. 29, 2021
 -->
<!-- <html lang="ko"> -->
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>Moving Characters</title>    
    <link rel="stylesheet" type="text/css" href="..\css\project.css" />
    <style>
        body {background-color:#fafad2;}        
    </style>
    <!--script src="..\js\jquery-3.6.0.min.js" type="text/javascript"></script-->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="..\js\project.js" type="text/javascript"></script>    
    <!--script src=".\web\.movingCh.js" type="text/javascript"></script-->
    <script>
        let el1 = false;
        let el2 = false;
        let lItem = 0;
        let lIx = 0;

        function showElement(item) {        
            if( item < 0 ) {
                let lId;
                let id;
                let ix = item * -1;
                
                if(item !== lItem) {
                    switch(lItem) {
                    case -1:    lId = "#moveChI";      break;
                    case -2:    lId = "#moveChArryI";  break;
                    case  0:    document.getElementById('dtGoal').hidden = true;
                    }
                }
                
                switch(item) {
                case -1:    id = "#moveChI";        break;
                case -2:    id = "#moveChArryI";    break;
                }
                
                if(lId !== null) {
                    $(lId).slideUp(300);
                    if(lIx !== 0) $('#m' + lIx.toString()).removeClass('sel');
                    if (item !== -3) document.getElementById('frMovCh').hidden = true;
                }
                
                if(id !== null) {
                    $(id).slideDown(300);
                    $('#m' + ix.toString()).addClass('sel');
                    lIx = ix;
                    //if (item === -3) $('#frMovCh').hidden = false;
                    if (item === -3) document.getElementById('frMovCh').hidden = false;
                }
                
                lItem = item;
                
            } else if(item === 1) el1 = true;
        }
        
        // it is not working.
        function movingCh(ix) {
            //id = document.getElementById('frMovCh');
            //id2 = id.getElementById('movingChReq');
            //id2.innerText = ix.toString();            
            const req = document.querySelectorAll('#movingChReq input');
            //const req = document.querySelectorAll('input');
            req[0].innerText = ix.toString();
            
        }
    </script>
</head>
<body>
<header><h1>Moving Characters (intermediate level)</h1></header>
    <iframe src=".\\web\\.movingCh.htm" id="frMovCh" style="width: 700px; height: 400px; padding: 0px;" hidden></iframe>

<nav><br/><br/>
    <!--a class="prj" id="goBack1" href="#" onClick="goBack(1)">&lt;= <i>back2main</i></a><br/><br/><br/-->
    <mark><b>Intermediate</b></mark><br/><br/>1.
    <a href="#" id="m1" class="prj" onClick="showElement(-1)">문자이동 I</a><br/><br/>2.
    <a href="#" id="m2" class="prj" onClick="showElement(-2)">문자이동 I <br/>&nbsp;&nbsp;&nbsp;&nbsp; (Array)</a><br/><br/>
    <!--a href=".Project_C_Advanced.htm?tab=tab_prj&item=2"><i><mark>Advanced</mark></i></a><br/><br/-->
</nav>
<section> 
    <h1>Moving Characters</h1>
    <h4><div id="dtGoal">
    <hr>
    <!-- <h4 style="line-height:200%;">  -->
    &emsp;이곳에선 난이도가 중간 정도인 Project들을 다룹니다.<br/>&emsp;
    내용을 보려면 왼쪽 <b style='color:blue'>문자이동 I</b> 또는 <b style='color:blue'>문자이동 I (Array)</b> 를 클릭해 주세요 !
    </div>
     
    <hr>
    <div id="moveChI" hidden> 
        <b><mark>I-1. 문자 이동 I</mark></b><br/><br/>&nbsp;
        이 Task는 한 개의 문자를 지정된 직사각형(30자리x15자리) 내부에서 만 프린트 되게 하는 것이다.<br/>
        이 과정을 통해 For/While loop, if statement에 대한 깊이 있는 이해와 활용법을 배우게 된다.<br/>
        또한 함수와 그 사용에 대한 실전 연습과 이해력을 돕게 된다.<br/><br/>        
        <hr>   
        <dl class="accordion">            
            <dt>Project를 시작 하기에 앞서...</dt><dd><br/>&nbsp;
                 이 Project에선 아래와 같은 Function 및 Key word 들을 사용한다.<br/>
                이 것들을 이용해 한 개의 문자를 지정된 직사각형(30자리 x 15자리)<br/>
                내부에서만 프린트 되게 한다.<br/><br/>                    
        
                여기서 사용될 주요 Function 들과 key 워드는 다음과 같다: <br/>&nbsp;
                <pre class="cFormat">
        Functions:
            - prompt();
            - console.log("");
        Key words:
            - if(), else()
            - for()
            - while()
            - switch(), case:, default:, break;
            - return 0; 
                </pre>
                 주 함수인 movingCh에선 아래와 같은 switch case 구조로,<br/>
                각 task를 하나의 함수에 구현 후 아래와 같이 case문을 통해<br/>
                호출 하면 된다.<br/>
                각 case의 숫자는 각 task 번호에 해당 한다.<br/>
                즉 Task #1의 경우, 해당 Task를 MoveCh1()에 구현한 뒤<br/>
                아래 예제와 같이 'case 1'에서 호출 하게 하면 된다.<br/><br/>
                
                <pre class="cFormat">
        function movingCh(taskId)
        {
            switch(taskId) {
            case 1: MoveCh1(); break;
            case 2: MoveCh2(); break;
            case 3: MoveCh3(); break;
            case 4: MoveCh4(); break;
            ...
            default: break;
            }
        }
                </pre><br/>
                    
                * <span style='color:red;'>주의</span>:<br/>&emsp;
                    이 Project의 각 문제에서 키보드 키를 입력 하라는 설명이 있는데,<br/>&emsp;
                    <mark>키를 입력 후 반드시 'Enter'키를 눌러줘야</mark> 한다.<br/>&emsp;
                    각 문제에 대한 설명을 간결 하게 하기 위해 이 'Enter'키에 대한<br/>&emsp;
                    설명이 생략되는 경우가 있는데,<br/>&emsp;
                    <mark>키를 입력</mark>하라면 반드시 <mark>마지막에 'Enter'키를 입력</mark> 해야 한다.<br/>                    
            </dd><br/>
            
            <dt><i style="font-size:15px;">Close All</i></dt><dd></dd>
            <dt>0. 키보드의 숫자 '0' Key를 입력하면 프로그램이 종료되게 하기</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=0&id=0"><br/>&nbsp;
                     키보드에서 숫자 <mark>0</mark>과 Enter key를 누르면<br/>
                    프로그램이 종료 되게 하고,<br/>
                    다른 key (문자 혹은 숫자) 와 Enter key를 누르면,<br/>
                    그 숫자를 프린트 하고 다음 키 입력을 받게 하세요.</a><br/><br/>
                    
                    Tip: Keyboard 입력은 아래와 같이 prompt()함수로 받습니다:</a><br/><br/>&emsp;&emsp;<i>
                    
                    <b style="color:blue">let</b> c;<br/>&emsp;&emsp;
                    c = prompt();
            </dd>
            <dt>1. 키보드 Key 입력할 때 마다 문자 '@' Print</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=0&id=1"><br/>&nbsp;
                     키보드 키를 하나 입력 하고 Enter key를 누를 때 마다<br/>
                    <mark>@</mark> 문자를 한 개씩 Print 하세요.<br/><br/>
                    
                    단 각 줄의 첫 번째 자리에만 '@'를 print 하고,<br/> 
                    숫자 '0'을 입력 하면 프로그램이 종료 돼야 합니다.<br/></a>
            </dd>
            <dt>2. '+' 또는 '=' Key를 누를 때만 '@' 1개 print</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=0&id=2"><br/>&nbsp;
                     '+' 또는 '=' 키를 입력하고 Enter를 누를 때만<br/>
                    <mark>@</mark>가 하나 Print 되게 하고,<br/>
                    그 이외의 key를 누르면 아무 것도 print되지 않게 하세요.<br/></a>
            </dd>
            
            <dt>3. Program 시작과 동시에 '@' 1개 Print, '+' 또는 '=' Key로 '@' 추가</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=0&id=3"><br/>&nbsp;
                    프로그램 실행과 동시에 한개의 @를 print 하고,<br/>
                    <mark>+</mark> 또는 <mark>=</mark>와 <mark>Enter</mark> key가 눌릴 때 마다<br/>
                    '@'를 하나씩 더 추가해 print 하세요.</a><br/><br/>
                    
                    만약 다른 키를 누르면 바로 이전에 프린트 했던 것과 같은 것을<br/>
                    Print해야 합니다.<br/>
                    아래 Instructions에 따라 하나씩 구현해 보세요<br/><br/>
                       
                       Instructions: <br/>&emsp;
                        1. <mark>&nbsp;let x = 1;&nbsp;</mark>를 정의 합니다. <br/><br/>&emsp;
                        2. Project를 실행 시키자 마자 <u><mark>@</mark> 1개가 Print 되게</u> 합니다. <br/><br/>&emsp;
                        3. <u><mark>for</mark> loop를 이용해 문자 '@'를 10개 프린트</u>하는 코드를 작성합니다.<br/>&emsp;&nbsp;&nbsp;&nbsp;
                           여기서 사용된 변수 'x'는 앞서<br/>
                           'let x = 1' 에서 정의한 변수 입니다. <br/><br/>&emsp;
                        4. 위에서 작성한 코드를 ('for' loop로 10개의 '@' 문자를 Print하던 것) 수정해,<br/>&emsp;&nbsp;&nbsp;&nbsp;
                           무조건 10개를 print하는 대신,<br/>
                           앞서 정의 했던 <u>변수 <mark>x</mark>에 저장된 값 만큼만 '@'를 print</u>하게 합니다.<br/><br/>&emsp;
                        5. 'for' loop를 실행 하기 바로 전에<br/>&emsp;&nbsp;&nbsp;&nbsp;
                           <u><mark>prompt()</mark>를 추가해 User key 입력</u>을 받을 수 있도록<br/>
                           코드 수정 합니다. <br/><br/>&emsp;
                        6. User가 <u>'+' 또는 '=' Key를 누른 경우 만<br/>
                           변수 'x' 값이 1씩 증가</u> 하게 합니다. <br/>&emsp;&nbsp;&nbsp;&nbsp;
                           주의할 것은, 'for' loop가 실행 되기 전에<br/>
                           증가 해야 한다는 것입니다. <br/><br/>&emsp;
                        7. 만약 '+' 또는 '=' Key가 아닌 <u>다른 Key가 입력 된다면</u><br/>&emsp;&nbsp;&nbsp;&nbsp;
                           변수 <u>'x' 값을 증 가 시키지 않고</u>,<br/>
                           'for' loop가 실행 되게 합니다.<br/>&emsp;&nbsp;&nbsp;&nbsp;
                           이는 print되는 '@'의 갯수가 이전 것과 같은 수 임을 의미 합니다.<br/>
            <dt>4. '+' 또는 '=' Key로 '@' 30개 까지만 Print</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=0&id=4"><br/>&nbsp;
                     <mark>+</mark> 또는 <mark>=</mark> 와 <mark>Enter</mark> key를 반복적으로 눌러<br/>
                     Print되는 '@'가 최대 30개 까지만 print되게 하세요.<br/>
                    30개가 됐을 때 키를 다시 눌러도 더 이상 Print되는 문자 갯수가<br/>
                    증가하면 안됩니다.</a><br/><br/>
                     
                    Instructions:<br/>&emsp;
                        1. <b style="color:blue">let</b> plygdWidth = 30; 을 정의한다.<br/>&emsp;
                        2. '@'가 30개 인지 검사할 때 이 변수 'plygdWidth' 를 사용한다.<br/><br/>
            </dd>
            <dt>5. '-' Key로 '@' 갯 수 줄이기</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=0&id=5"><br/>&nbsp;
                     앞서 작성한 코드는 '+' 또는 '=' 키를 눌러 '@'를<br/>
                    최대 30개 까지 print하게 합니다.<br/><br/>
                     
                    여기에 <mark>&nbsp;-&nbsp;</mark> 키와 <mark>Enter</mark> 키를 누르면 Print 되는 '@'의 갯수가 <br/>
                    1개씩 감소 하도록 코드를 추가 하세요.</a><br/><br/>
                     
                    <b style="color:red">주의</b>: '@'가 1개 남았을 때 '-' Key를 계속 입력 해도<br/>&emsp;&emsp;&emsp;
                          Program이 종료(Crash)되는 Error가 없어야 합니다.<br/>
            </dd>
            <dt>6. '-' Key를 계속 눌러도 '@' 가 최소 1개는 남게 하기</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=0&id=6"><br/>&nbsp;
                     <mark>&nbsp;-&nbsp;</mark> 키와 <mark>Enter</mark> 키를 반복적으로 눌러</br>
                    Print 되는 @의 갯수가 1개로 감소 했을때 <br/>
                    다시 키를 눌르면 @가 사라지지 않고<br/>
                    여전히 1개는 남게 하세요.</a><br/>
            </dd>
            <dt>7. 연속 동작 Test</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=0&id=7"><br/>&nbsp;
                     현재까지 완성된 프로그램으로<br/>
                    위 1번부터 6번 Task까지 Random 하게 Test 하세요.<br/>
                    즉 Print되는 @ 문자 수를 증가 시키다 감소 시키거나,<br/>
                    또는 감소 시키다 증가 시키는 여러 가지 패턴의 테스트를<br/>
                    연속적으로 테스트 합니다.
                    연속 동작으로 실행 시켜도 문제 없이 동작하는지 확인 하는 겁니다.<br/>
                    만약 문제가 발생 했다면 Debugging 해주세요.</a><br/>
            </dd>
            <dt>8. '@'가 30개일 때 '+' 또는 '=' Key를 누르면 다시 1개 부터 증가하게 하기</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=0&id=8"><br/>&nbsp;
                     '@'가 30개 print되게 한 뒤 <mark>+</mark> 또는 <mark>=</mark> 키와 <mark>Enter</mark> 키를</b><br/>
                    한번 더 누르면 '@'가 1개만 print되게 하고,<br/>
                    반복해서 다시 누르면 Print되는 문자의 갯수가<br/>
                    매번 1개씩 증가하게 하세요.<br/>
                    계속 증가해 다시 30개가 되면 위 동작이 반복하게 합니다.<br/></a>
                     
            </dd>
            <dt>9. '+' Key 연속 동작 Test</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=0&id=9"><br/>&nbsp;
                     지금까지 구현한 코드가 연속 동작에서도 잘 동작하는지<br/>
                    테스트 해 주세요.<br/>
                    특히, '@'가 30개 print 됐을 때<br/>
                    '+' 키를 한 번 눌러 '@'가 1개만<br/>
                    print 되게 한 뒤, 다시 '+' 키를 누르면,<br/>
                    누를 때마다 @가 한 개씩 증가 하는지,<br/>
                    확인해 주세요.<br/>
                    이 테스트에 앞서 '+' 또는 '-' 키를<br/><br/>
                    다양한 패턴으로 눌러 Program이 잘 동작하는지<br/>
                    먼저 확인 하는 과정이 매우 중요합니다.<br/>
                    이런 연속 동작 테스트에서 예상치 못한 문제가<br/>
                    자주 발견 되므로 꼼꼼하게 테스트 해보고,<br/>
                    만약 문제가 있다면 Debugging 해주세요.<br/></a>
            </dd>
            <dt>10. '@'가 한개 남았을 때 다시 '-' Key 누르면 30개 Print</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=0&id=10"><br/>&nbsp;
                     감소 키인 <mark>&nbsp;-&nbsp;</mark> 키와 <mark>Enter</mark>키를 반복적으로 눌러<br/>
                    Print되는 '@' 문자 갯수가 한개 만 남았을 때,<br/>
                    다시 감소 키를 한번 더 누르면 @가 30개 Print 되게 하세요.<br/><br/>
                    
                    위 감소키를 반복적으로 눌러 30개 Print되던 @ 문자가<br/>
                    다시 @가 1개만 남았을 때 다시 감소 키를 누르면<br/>
                    또 30개가 print되는 동작이 반복 돼야 합니다. <br/></a>
            </dd>
            <dt>11. 연속 동작 Test</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=0&id=11")"><br/>&nbsp;
                     지금까지 구현된 모든 기능을 연속 동작으로 테스트 해주세요.<br/>
                    특히, '@'가 한개 만 print 됐을 때,<br/>
                    감소키인 '-' 키를 한번 더 누르면 '@'가 30개 Print 되는<br/>
                    것과, 다시 감소키를 반복적으로 누르면, <br/>                    
                    누를 때마다 @의 갯수가 한개씩 감소 되는 기능을 테스트 합니다.<br/><br/>
                    
                    다양한 키 조합으로 Test하고 문제가 발견되면 Debugging 하세요.<br/></a>
            </dd>
        </dl>
    </div>
    
    
    <div id="moveChArryI" hidden> 
        <b><mark>I-2. 문자 이동 (Array) I</mark></b><br/><br/>&nbsp;
         이 Task는 한 개의 문자를 지정된 직사각형(30자리x15자리) 내부에서 만 프린트 되게 하는 것이다.<br/>
        Project가 완성되면 앞서 진행한 project '문자이동 I'과 동일한 실행 과를 얻게 되지만, <br/>
        이번 Project 에선 <ins>One Dimension Array</ins>를 이용하기 때문에 앞서 배운 내용과 Implementation 부분이 다르다.<br/>
        이 과정을 통해 For/While loop, if statement는 물론 Array에 대한 깊이 있는 이해와 활용법을 배우게 된다.<br/>
        또한 함수와 그 사용에 대한 실전 연습과 이해력을 돕게 된다.<br/><br/>
            
        <hr>   
        <dl class="accordion">
            <dt>Project를 시작 하며 ...</dt><dd><br/>&nbsp;
                 이 Project에선 Array는 물론 아래와 같은 Functions 및 Key word 들을 사용한다.<br/>
                이 것들을 이용해 한 개의 문자를 지정된 직사각형(30자리x15자리) 내부에서만 프린트 되게 한다.<br/><br/>                    
        
                여기서 사용될 Function과 key 워드는 다음과 같다: <br/>&nbsp;
                <pre class="cFormat">
        Functions:
            - prompt();
            - console.log("");
            - console.clear();
            - Array.join('');
            - String.trim();
        Key words:
            - if(), else()
            - for()
            - while()
            - switch(), case:, default:, break;
            - return 0; 
                </pre>
                Main 함수인 movingCharArray 함수에선 아래와 같은 switch case 구조로, 각 small task에서 define한 <br/>
                각 함수 들을 아래와 같이 호출 한다.<br/><br/>
                <pre class="cFormat">
        function movingCharArray(taskId)
        {
            
            switch(taskId) {
            case 1: MoveChArry1(); break;
            case 2: MoveChArry2(); break;
            case 3: MoveChArry3(); break;
            case 4: MoveChArry4(); break;
            ...
            default: break;
            }
        }
                </pre><br/>

                * <span style='color:red;'>주의</span>:<br/>&emsp;
                    이 Project의 각 문제에서 키보드 키를 입력 하라는 설명이 있는데,<br/>&emsp;
                    <mark>키를 입력 후 반드시 'Enter'키를 눌러줘야</mark> 한다.<br/>&emsp;
                    각 문제에 대한 설명을 간결 하게 하기 위해 이 'Enter'키에 대한<br/>&emsp;
                    설명이 생략되는 경우가 있는데,<br/>&emsp;
                    <mark>키를 입력</mark>하라면 반드시 <mark>마지막에 'Enter'키를 입력</mark> 해야 한다.<br/>
                    
            </dd><br/><br/>
            <dt><i style="font-size:15px;">Close All</i></dt><dd></dd>
            <dt>1) 문자 '@' Print (1개)</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=1&id=1"><br/>
                    1) 키보드의 키를 누를 때 마다 '@' 문자를 한 개씩 Print 하세요.</a><br/><br/> &nbsp;
                    
                     아래 예제 코드를 수정해 이번 Small Task를 완성하는 것입니다.<br/>
                    완성된 코드는 '@'를 각 줄의 첫 번째 자리에만 print되게 하고, <br/>
                    Keyboard에서 User key 입력을 받을 땐 아래와 같이 prompt() <br/>
                    함수를 사용하며, console.log()로 문자 '@'를 print할 때에도 해당 문자를 <br/>
                    바로 print하는 것이 아니라,<br/>
                    정해진<mark> Array의 해당 위치에 '@'를 저장</mark>한 뒤 그 Array를 Print 하는 것입니다. <br/><br/><i>
                    <pre class="cFormat">
    
    function moveChArray1()
    {   
        let playgroundActiveRow = new Array(30);
        let c;
        
        for( let i = 0; i < 30; i++) {
            // clear each element of the array with a space character ' '.
            ...
        }
        
        playgroundActiveRow[0] = '@';
        ...
        
        c = prompt();

        ...
        console.log(playgroundActiveRow.join(''));
    }
    
    function movingCharArray(taskId)
    {
        switch(taskId) {
            case 1: moveChArry1(); break;
            default: break;
        }
        return 0;
    }
                    </pre></i><br/>
                    
            </dd>
            <dt>2) '+' Key를 누를 때만 '@' 1개 print</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=1&id=2"><br/>&nbsp;
                     '+' 또는 '=' 키를 누를 때 만 @가 하나 Print 되게 하고,<br/>
                    그 이외의 key를 누르면 아무 것도 print되지 않게 하세요.</a><br/><br/>
                    
                    * 주의: '@'를 Print할 때는 항상 Array 변수인 playgroundActiveRow를 이용해 print해야 함을 잊지 않도록 합니다.
            </dd>
            
            <dt>3) Program 시작과 동시에 '@' 1개 Print, '+' Key로 '@' 추가</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=1&id=3"><br/>&nbsp;
                     프로그램 실행과 동시에 한개의 @를 print 하고,<br/>
                    '+' 또는 '=' key가 눌릴 때 마다 <br/>
                    '@'를 하나씩 더 증가해 print 하세요.<br/>
                    단 다른 키를 누르면 이전에 프린트 했던 수와 동일한 수의 '@'를 Print해야 합니다.</a><br/><br/>
                       
                       Instructions: <br/>&nbsp;&nbsp;&nbsp;&nbsp;
                        1. "let x = 1;"를 정의 합니다. <br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;
                        2. Project를 실행 시키자 마자 '@' 1개가 Print 되게 합니다. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           '@' print할 때엔 항상 Array 변수인 playgroundActiveRow를 이용해 print해야 함을 잊지 않도록 합니다. <br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;
                        3. User가 '+' key를 누를 때 마다 '@' 1개를 Array 변수 playgroundActiveRow[x]에 저장 합니다. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           여기서 사용된 변수 'x'는 앞서 "let x = 1;"로 정의했던 변수 입니다. <br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;
                        3. '@' 1개를 Array 변수 playgroundActiveRow[x]에 저장한 뒤엔 항상 변수 'x'를 1씩 증가 시킵니다. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           즉, 최초로 '+' key를 누르면 '@' 가 playgroundActiveRow[1]에 저장되고, <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           두번째 누르면 '@'를 playgroundActiveRow[2]에, 이어서 또 '+' key를 누르면, <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           playgroundActiveRow[3]에 저장되게 되는 것입니다. <br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;
                        4. '@' 1개를 앞서 설명 한 것 처럼 Array 변수 playgroundActiveRow[x]에 저장할 때마다,  <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            저장 직 후 바로 Array playgroundActiveRow에 저장 했던 모든 값들을 Print합니다. <br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;
                        5. User가 '+' Key를 한번 누를 때 '@' 1개가 Array 변수 playgroundActiveRow[x]에 저장 되고, <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           이어서, 저장된 값들이 print된 후 변수 'x'가 1 증가 하는 것이 잘 동작 한다면, <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           이 과정이 '+' key가 눌릴 때마다 반복되게 코드를 수정 합니다. <br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;
                        6. 만약 '+' Key가 아닌 다른 키가 입력 되면 변수 'x' 값을 증 가 시키지 않고, <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           playgroundActiveRow에 저장됐던 값들을 모두 Print 하게 하세요. <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           즉 print되는 @ 갯수가 Key가 눌리기 이전 갯 수와 동일한 수가 되는 것입니다.<br/>

                    * <span style='color:red'>주의</span>: 이 project를 진행 하는 전체 과정에서 아래 기술된 한 가지 규칙을 꼭 따라야합니다.<br/>&emsp;
                      그 규칙은 print할 '표시 문자' (default: '@')들을 하나의 Array에 보관해야 한다는 것과,<br/>&emsp;
                      print 전에 print하고자 하는 모든 것들을 미리 이 Array에 담아야 한다는 것이다. <br/><br/>
            </dd>
            <dt>4) '+' 또는 '=' Key로 '@' 30개 까지만 Print</dt><dd>
                <a class="prj" href="movingChExe.htm?prj=1&id=4"><br/>&nbsp;
                     '@'를 최대 30개 까지만 print 되게 하세요.<br/>
                    이 코드가 완성 되면, @ 문자 30개가 print 되도록 '+' 키를 반복 적으로 누른 후,<br/>
                    다시 '+' 키를 누르면 print되는 '@'의 갯 수가 더 이상 증가하지 않습니다.</a><br/><br/>
                    <span style='color: blue;'>let</span> plygdWidth = 30; 라는 변수를 정의하고, 이 변수를 활용해 '@'가 30 이상 print 되지 않게 하세요.<br/>
            </dd>
            <dt>5) '-' Key로 '@' 갯 수 줄이기</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=1&id=5"><br/>&nbsp;
                     '@'가 1개 이상 print 됐을 때, <br/>
                    '-' 키를 누르면 누를 때마다 '@'의 갯수가 1개씩 줄어들게 하세요.<br/>                    
                    '@'가 1개 남았을 때 '-' Key를 한번 더 누르면 '@'가 더 이상<br/>
                    print되지 않게 합니다. 이때 '-' key를 더 눌러도 Program이<br/>
                    Error에 의해 Crash(종료) 되면 안됩니다.</a><br/>
            </dd>
            <dt>6) '-' Key로 '@' 가 1개 까지만 남게 줄이기</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=1&id=6"><br/>&nbsp;
                     '@'가 1개만 print 되게 한 후,<br/>
                    다시 '-' 키를 추가로 눌러도 '@'가<br/>
                    여전히 1개만 Print되게 하세요.</a><br/>
            </dd>
            <dt>7) 연속 동작 Test</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=1&id=7"><br/>&nbsp;
                     다양한 키를 입력해 지금까지 작성한 코드가 문제없이 잘 동작하는지<br/>
                    연속 동작으로 테스트 합니다. 즉, '+', '-', 및 다른 키들을 Random하게 입력해<br/>
                    정상 동작 하는지 Test 해 보고, 만약 문제가 별견되면 Debugging 하세요.</a><br/>
            </dd>
            <dt>8) '@'가 30개일 때 '+' Key 누르면 1개만 Print하게 하기</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=1&id=8"><br/>&nbsp;
                     @가 30개 print되게 한 뒤 '+' 키를 한번 더 누르면<br/>
                    @가 1개만 print되게 하세요.<br/>
                    '+'를 반복적으로 더 누른다면, 누를 때마다 '@'가<br/>
                    1개씩 증가하며 print돼야 합니다.</a><br/>
            </dd>
            <dt>9) '+' Key 연속 동작 Test</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=1&id=9"><br/>&nbsp;
                     위와 같이 @가 30개 print 됐을 때<br/>
                    '+' 키를 한 번 눌러 '@'가 1개만 print 되게 한 뒤,<br/>
                    다시 '+' 키를 누르면, 누를 때 마다 @가<br/>
                    한 개씩 증가 하는지 연속 동작으로 여러번 Test 하고,<br/>
                    만약 문제가 발견 되면 Debugging 하세요.</a><br/>
            </dd>
            <dt>10) '@'가 한개 남았을 때 '-' Key를 누르면 30개 Print</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=1&id=10"><br/>&nbsp;
                     '@'가 한개만 print됐을 때, '-' 키를 한번 더 누르면<br/>
                    '@'가 30개 Print 되게 구현 하세요.</a><br/>
            </dd>
            <dt>11) 연속 동작 Test</dt><dd>    
                <a class="prj" href="movingChExe.htm?prj=1&id=11"><br/>&nbsp;
                     위와 같이 @가 한개 만 print 됐을 때,<br/>
                    '-' 키를 한번 더 누르면 @가 30개 Print 되는지 확인 하고,<br/>
                    다시 '-' 키를 누르면, 누를 때마다 @의 갯수가 한 개 씩<br/>
                    감소 되는지 연속 동작으로 테스트 하세요.<br/>
                    만약 문제가 발견되면 Debugging 하세요.</a>
            </dd>
        </dl>
    </div>    
    
    </h4>
    </section>
</body>